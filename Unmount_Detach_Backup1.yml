---
- name: Safely Unmount and Detach Datastore and Disk
  hosts: localhost
  gather_facts: no
  collections:
    - community.vmware

  vars:
    vm_name: "your-vm-name"
    datastore_name: "Backup_1"
    vmfs_device_name: "naa.5000c50079286feb"
    esxi_host: "your-esxi-host"
    esxi_user: "your-esxi-user"
    esxi_password: "your-esxi-password"

  tasks:
    - name: Get VM disk details
      community.vmware.vmware_guest_disk:
        hostname: "{{ esxi_host }}"
        username: "{{ esxi_user }}"
        password: "{{ esxi_password }}"
        validate_certs: no
        vm_id: "{{ vm_name }}"
      register: vm_disk_info

    - name: Unmount datastore
      vmware_host_datastore:
        hostname: "{{ esxi_host }}"
        username: "{{ esxi_user }}"
        password: "{{ esxi_password }}"
        validate_certs: no
        datastore_name: "{{ datastore_name }}"
        state: absent

    - name: Detach disk from VM
      community.vmware.vmware_guest_disk:
        hostname: "{{ esxi_host }}"
        username: "{{ esxi_user }}"
        password: "{{ esxi_password }}"
        validate_certs: no
        vm_id: "{{ vm_name }}"
        disk_id: "{{ vm_disk_info.disks[0].disk_id }}"  # Use the disk ID of the VM you want to detach
        state: absent

    - name: Wait for disk detachment
      ansible.builtin.shell: |
        timeout=30
        while [ $timeout -gt 0 ]; do
          if ! esxcli storage core device list | grep -q "{{ vmfs_device_name }}"; then
            exit 0
          fi
          sleep 2
          timeout=$((timeout - 2))
        done
        exit 1
      register: detachment_check
      changed_when: false
      failed_when: detachment_check.rc != 0
      delegate_to: "{{ esxi_host }}"
      vars:
        ansible_user: "{{ esxi_user }}"
        ansible_ssh_pass: "{{ esxi_password }}"
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'

    - name: Detach device from ESXi
      ansible.builtin.raw: >
        esxcli storage core device set --state=off --device={{ vmfs_device_name }}
      when: detachment_check.rc == 0
      delegate_to: "{{ esxi_host }}"
      vars:
        ansible_user: "{{ esxi_user }}"
        ansible_ssh_pass: "{{ esxi_password }}"
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
